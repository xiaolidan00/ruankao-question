{
  "msg": "success",
  "code": 200,
  "data": {
    "currentIndex": null,
    "examId": "1787854266442715136",
    "examTime": 9000,
    "examComplete": 0,
    "questionList": [
      {
        "id": "796235523751432193",
        "title": "试题一（25分）<br>\n阅读以下关于软件系统分析的叙述，在答题纸上回答问题1至问题3。<br>\n【说明】<br>\n某软件企业为电信公司开发一套网上营业厅系统，以提升服务的质量和效率。项目组经过分析，列出了项目开发过程中的主要任务、持续时间和所依赖的前置任务，如表1-1所示。在此基础上，绘制了项目PERT图。<br>\n<img alt=\"\" src=\"https://image-t.chaiding.com/ruankao/ead7c62d487604408747848e5f0f54dc.jpg-ruankao\" width=\"620\" height=\"266\">\n<br><br>\n【问题1】（10分）<br>\nPERT图采用网络图来描述一个项目的任务网络，不仅可以表达子任务的计划安排，还可以在任务计划执行过程中估计任务完成的情况。针对表1-2中关于PERT图中关键路径的描述（1）~（5），判断対PERT图的特点描述是否正确，并说明原因。<br>\n <img alt=\"\" src=\"https://image-t.chaiding.com/ruankao/a4232b416f69a578a6359d1cad650e68.jpg-ruankao\" width=\"594\" height=\"180\">\n<br><br>\n【问题2】（5分）<br>\n根据表1-1所示任务及其各项任务之间的依赖关系，计算对应PERT图中的关键路径及项目所需工期。\n<br><br>\n【问题3】（10分）<br>\n根据表1-1所示任务及其各项任务之间的依赖关系，分别计算对应PERT图中任务C~G的松弛时间（SlackTime），将答案填入（a）~（e）中的空白处。",
        "analyze": "【问题1】<br>\n(1)正确。项目工期是指项目所有任务完成的最早时间，对应于PERT图中工期最长的路径，即关键路径。<br>\n(2)错误。PERT图中可能存在多条路径有相同工期，关键路径也可能存在多条。<br>\n(3)错误。在项目执行过程中，如果任务的实际完成时间发生变化，那么项目关键路径就可能发生变化。<br>\n(4)正确。PERT图中关键路径越多，那同时并发且不可延迟的任务就越多，项目任务之间的关系就会更复杂。<br>\n(5)正确。关键路径上的任务一旦发生延迟，那整个项目工期会增加，所以关键路径上的任务不能延迟。<br>\n<br>\n本题考查PERT图及关键路径分析相关知识及应用。<br>\nPERT(Program/Project Evaluation and Review Technique)即计划评审技术，是利用网络分析制订计划以及对计划予以评价的技术。它能协调整个计划的各道工序，合理安排人力、物力、时间、资金，加速计划的完成。在现代计划的编制和分析手段上，PERT被广泛地使用，是现代项目管理的重要手段和方法。<br>\n此类题目要求考生熟练掌握项目管理中PERT的基础知识和应用技术，能够结合题目中所述各项任务及其依赖关系绘制PERT图，并在此基础上进行关键路径分析以确定关键路径及非关键任务的可延迟时间。<br>\n通过描述PERT图的特点，考查考生对于PERT和关键路径分析知识的掌握程度。项目工期是指项目所有任务完成的最早时间，对应于PERT图中的最长路径，即关键路径；PERT图中可能存在多条路径有相同工期，关键路径也可能存在多条；在项目执行过程中，如果任务的实际完成时间发生变化，那么项目关键路径就可能发生变化；PERT图中关键路径越多，那同时并发且不可延迟的任务就越多，项目任务之间的关系就会更复杂；关键路径上的任务一旦发生延迟，整个项目工期会增加，所以关键路径上的任务不能延迟。\n<br><br>\n【问题2】<br>\n(1)关键路径：A-B-C-E-G-H-I<br>\n(2)项目工期：25(周）<br>\n<br>\n根据题目所述绘制任务PERT图如下所示：<br>\n<img width=\"480\" height=\"160\" src=\"https://image-t.chaiding.com/ruankao/6ac7fbd2bdd2993f3143a6b4e55804b5.jpg-ruankao\" alt=\"\"><br>\n从任务A到任务I中工期最长的路径为关键路径：A-B-C-E-G-H-I,其关键路径长度即项目工期为25周。\n<br><br>\n【问题3】<br>\n(a)0，(b)3，(c)0，(d)3，(e)0。<br>\n<br>\n从PERT图中可知任务C、E、G为关键任务，其可延迟时间为0;任务D、F为非关键任务，其可延迟时间为最晚开始时间减去最早开始时间，均为3。",
        "multi": 0,
        "questionType": 2,
        "answer": "",
        "chooseItem": null,
        "itemList": null,
        "userAnswer": "",
        "userChooseItem": null,
        "answerCorrect": null,
        "userCollect": 0,
        "notebookNum": 0
      },
      {
        "id": "796235527933153281",
        "title": "试题三（25分）<br>\n阅读以下关于安全攸关嵌入式系统相关技术的描述，在答题纸上回答问题1至问题3。<br>\n【说明】<br>\n某公司机电管理系列产品被广泛应用于飞行器后，外场事故频繁发生，轻则飞机座舱显示机电设备工作异常，重则系统预警，切入备份运行。这些事故给航空公司带来重大经济损失。<br>\n公司领导非常重视航空公司的问题反馈，责令公司王总带队到现场进行故障排查。经过一个多月的排查，故障现象始终未复现，同时，公司实验室内也在反复复现故障，结果未取得显著成效，但发现产品存在偶然丢失协议包的现象。随后，公司领导组织行业专家召开故障分析会。王总在会上对前期故障排查情况进行了说明，指出从外场现象看CCDL协议包丢失是引起系统报警、切换的主要原因。图3-1给出了机电管理产品的工作原理，机电管理系统主要承担了对飞行器的刹车、燃袖和环控等子系统进行监视与控制，它对飞行器而言是安全攸关系统，因此，从系统结构上采用了双余度计算机系统。具体工作流程简要说明如下：<br>\n<img width=\"450\" height=\"277\" alt=\"\" src=\"https://image-t.chaiding.com/ruankao/4ae3af50f50e6362e09cf73f2627948a.jpg-ruankao\" title=\"\" align=\"\"><br>\n１．机电管理系统由1号计算机和2号计算机组成，双机互为余度备份；<br>\n２．双机中分别驻留了一个100ms周期的CCDL任务，完成双机间的交叉对比和实时监控等工作。10ms定时器作为任务的工作频率；<br>\n３．交叉对比协议包包含一组“AA55”报头、消息长度、数据和校验码；<br>\n４．2号机将协议包通过422总线发送给1号机（422总线接口芯片有8级缓冲）；<br>\n５．1号机通过中断方式将422总线数据接收到大环形缓冲区中（大小为4096B）；<br>\n６．100ms的CCDL定时任务将大环形缓冲冲区的数据以512B为单位拷贝到小环形缓冲区中（大小512B）；<br>\n７．CCDL任务按照协议包格式解析小环形缓冲的数据，如果校验错误，丢弃当前协议包；<br>\n８．在协议包格式正确的情况下，进行数据交叉比对，比对正确则输出；比对不正确，并连续不正确超过门限，则报警。\n<br><br>\n【问题1】（12分）<br>\n王总汇报时指出，在设计安全攸关系统软件时，往往不重视安全攸关软件设计方法, 不遵守C语言安全编码规范，导致程序质量较差，代码中存在支全隐患。请简要说明表3-1给出的C语言代码是C语言安全编码标准中（如：MISARC标准）不允许采用的代码结构的原因。<br>\n表3-1 C语言代码实例<br>\n<img width=\"500\" height=\"671\" alt=\"\" src=\"https://image-t.chaiding.com/ruankao/d6f1fa869b5a1d2c50daac84e142ec39.jpg-ruankao\" title=\"\" align=\"\"><br>\n<img width=\"529\" height=\"530\" alt=\"\" src=\"https://image-t.chaiding.com/ruankao/cb1dc5c22a970e55e1d6f724c434accf.jpg-ruankao\">\n<br><br>\n【问题2】（10分）<br>\n请根据自己对图3-1所示机电管理系统工作原理的分析，用300字以内的文字说明本实例中可能存在哪三方面数据传输时丢失协议包现象，并简要说明原因。\n<br><br>\n【问题3】（3分）<br>\n针对以上分析出的三种丢包原因，请举例给出两种以上的修改丢包bug的可能的方法。",
        "analyze": "【问题1】<br>\n(1)C语言安全编码标准“if...else if语句中必须使用else分支”。<br>\n(2)C语言安全编码标准“禁止使用空switch语句”。<br>\n(3)C语言安全编码标准“禁止将参数指针赋值给过程”。<br>\n(4)C语言安全编码标准“禁止将过程声明为指针类型”。<br>\n(5)C语言安全编码标准“禁止同一个表达式中调用多个相关函数”。<br>\n(6)C语言安全编码标准“禁止对指针变量使用强制类型转换赋值”。<br>\n<br>\n本题主要考查对安全攸关系统开发中提高可靠性、安全性的保证技术的掌握程度。首先要求考生应在理解安全关键系统相关基本概念和主要特征的基础上，针对宇航系统软件编码的安全要求、系统余度管理设计技术等方面有所了解，其次，考生应详细阅读题干给出的宇航机电管理系统工作原理和部分系统需求，在理解、分析和推断的基础上，给出各问题的正确解答。<br>\n机电管理系统是宇航器飞行的关键系统之一，其主要承担了对飞行器的刹车、燃油和环控等子系统进行监视与控制，通常为了飞行器安全，此系统普遍采用双余度结构，系统提供两个通道数据采集通道，两个同构计算机上执行相同程序，在数据处理完成后，采用CCDL交叉对比，进行表决，最后选取正确的数据输出。<br>\n在设计安全攸关系统软件时，必须规定项目团队的编码规则，宇航系统软件开发通常采用C语言。由于C语言属于非强制性语言，有些语句存在一定的二义性，有些语句的使用会影响软件最终的安全性，因此，安全攸关系统中的软件开发必须屏蔽掉可能存在安全隐患的语句。参照国际行业规范（如：MISARC标准)，我国制定了多种C语言安全编码标准，从不同领域提出了对C语言的使用限制。<br>\n给出了6种典型的C语言存在安全隐患的语句，简要说明如下，此6项在标准中均属于强制执行。<br>\n(1)标准要求：“if…else…”语句在程序中必须配对使用，否则属于分支条件不完整，易产生安全隐患。规定“C语言安全编码标准‘if-else if语句中必须使用else分支’”。<br>\n(2)标准要求：“switch”语句大括号内不能缺少执行语句，否则switch内的条件无法满足，难易退出循环。规定“C语言安全编码标准‘禁止使用空switch语句’”。<br>\n(3)标准要求：为了保证指针使用的安全性，避免指针套指针的结构，引起数据的不可预计，尤其是给过程赋指针变量。规定“禁止将参数指针赋值给过程”。<br>\n(4)标准要求：在过程内进行静态声明时，不能将过程静态声明成指针，以免引起访问错误。规定“禁止将过程声明为指针类型”。<br>\n(5)标准要求：为了避免表达式中存在二义性，不允许表达式嵌套层次过多，尤其是多重调用函数。规定“禁止同一个表达式中调用多个相关函数”。<br>\n(6)标准要求：指针类型变量被强制性转化会引起指针数据的不确定性，尤其是对指针进行强制转化后赋值，其数据的真实含义会发生变化，存在安全隐患。规定“禁止对指针变量使用强制类型转换赋值”。\n<br><br>\n【问题2】<br>\n图3-1可能存在大小缓冲不匹配、时钟不准和422总线缓冲丢字节等三方面丢数据包现象。<br>\n(1)大小缓冲不匹配。由于CCDL任务在每100ms将大缓冲的数据拷贝到小缓冲后，进行协议包解析。当两缓冲存在大量接收数据包时，如果CCDL任务处理机制设计不合理，有可能解析时间过长而引起丢包现象。<br>\n(2)100ms时钟不准。由于大小环形缓冲数据交换采用100ms时钟周期处理，而100ms时钟周期依赖于10ms计时器，如果10ms计时器受到系统干扰可能丢失中断，则引起100ms时钟周期增加10ms。导致CCDL任务定时时间不准，不能按100ms周期解析协议包，过早解析协议包，而当前周期的协议包还未到达，可能导致丢包。<br>\n(3)422总线缓冲丢字节。422总线有8字节输入缓冲，如果将422总线设置为全满中断时，在数据输入流量大的情况下，8字节FIFO字节输入缓冲容易溢出，导致字节丢失，一旦协议包校验和失败，会丢弃此包，这样会导致丢包。<br>\n<br>\n图3-1给出了机电系统双余度的工作原理，双机交换数据是从422串行接口中采集到的，从题干可以看出，422数据包的长度是不确定，每包包头用“AA55”识别。通常驱动程序需要将数据按字节方式接收后，存入缓冲区中，处理程序将通过找“AA55”包头，获取长度数据，计算出完成数据包，进行处理。<br>\n从图3-1可以看出，系统采用了大小两个缓冲区，100ms任务启动后，从大缓冲区读取一帧协议包后，放入小缓冲，因此，大小缓冲不匹配而会引发数据包丢失；其次实时系统工作要依赖于系统工作频率，本系统工作频率为10ms, 一旦10ms定时器中断丢失或被屏蔽必然引起实时调度的时钟不准，而引发周期任务不能准时工作，会导致与当前帧的协议包不完整而丢掉不完整的协议包；422总线是异步总线，接收方与发送方不存在相互依赖关系，因此，总线仅有8级缓冲，并采用FIFO方式缓冲，如果缓冲区数据没有被及时读走，将会被后续数据所覆盖，如果包头数据被覆盖，必然导致协议包丢失。具体原因简要说明如下：<br>\n(1)大小缓冲不匹配。由于CCDL任务在每100ms将大缓冲的数据拷贝到小缓冲后，进行协议包解析。当两缓冲存在大量接收数据包时，如果CCDL任务处理机制设计不合理，有可能解析时间过长而引起丢包现象。<br>\n(2) 100ms时钟不准。由于大小环形缓冲数据交换采用100ms时钟周期处理，而100ms时钟周期依赖于10ms计时器，如果10ms计时器受到系统干扰可能丢失中断，则引起100ms时钟周期增加10ms。导致CCDL任务定时时间不准，不能按100ms周期解析协议包，过早解析协议包，而当前周期的协议包还未到达，可能导致丢包。<br>\n(3)422总线缓冲丢字节。422总线有8字节输入缓冲，如果将422总线设置为全满中断时，在数据输入流量大的情况下，8字节FIFO字节输入缓冲容易溢出，导致字节丢失，一旦协议包校验和失败，会丢弃此包，这样会导致丢包。\n<br><br>\n【问题3】<br>\n(1)512B和4096B两个缓冲区合并，以减少缓冲区拷贝不同步而产生的丢包问题。<br>\n(2)精简10ms时钟中断处理程序，避免10ms中断的丢失，所引发100ms任务不能准时启动。<br>\n(3)充分利用422芯片的缓冲区的满、半满和空中断机制，避免422缓冲区内字节数据未及时读出而丢失，使100ms任务找不到包头或校验码错。<br>\n(4)采用新型校验码，降低传输中的数据错误。<br>\n(5)缩短100ms任务的循环周期，以及时处理CCDL任务。<br>\n<br>\n基于上述三种可能的丢包原因，可举例给出两种以上的修改丢包缺陷的可能方法。<br>\n(1)512B和4096B两个缓冲区合并。设计成两级缓冲方法本身存在不合理的地方，不但数据移动影响系统实时性，而且在寻找协议包时会将半包数据丢弃，因此合并两个缓冲区，100ms任务直接在大缓冲区中寻找协议包，直接处理，以减少缓冲区拷贝不同步而产生的丢包问题。<br>\n(2)422串行总线中断处理程序、10ms时钟中断处理程序要精简，在中断处理程序中及时处理并及早退出。这样，可避免10ms中断的丢失所引发100ms任务不能准时启动。<br>\n(3)422芯片的8级缓冲，根据总线数据的传输频率，充分利用422芯片的缓冲区的满、半满和空中断机制，避免422缓冲区内字节数据未及时读出而丢失，使100ms任务找不到包头或校验码错。<br>\n(4)采用新型校验码，在422总线数据发生校验错时，可进行校队，降低传输中的数据错误。<br>\n(5)在总线数据的传输频率非常高的情况下，可以通过缩短100ms任务的循环周期，以及时处理CCDL任务，确保每帧数据能够得到实时处理。",
        "multi": 0,
        "questionType": 2,
        "answer": "",
        "chooseItem": null,
        "itemList": null,
        "userAnswer": "",
        "userChooseItem": null,
        "answerCorrect": null,
        "userCollect": 0,
        "notebookNum": 0
      },
      {
        "id": "796235525991190529",
        "title": "试题二（25分）<br>\n阅读以下关于基于MDA(Model Driven Architecture)的软件开发过程的叙述，在答题纸上回答问题1至问题3。<br>\n【说明】<br>\n某公司拟开发一套手机通讯录管理软件，实现对手机中联系人的组织与管理。公司系统分析师王工首先进行了需求分析，得到的系统需求列举如下：<br>\n用户可通过查询接口查找联系人，软件以列表的方式将查找到的联系人显示在屏幕上。显示信息包括姓名、照片和电话号码。用户点击手机的“后退”按钮则退出此软件。<br>\n点击联系人列表进入联系人详细信息界面，包括姓名、照片、电话号码、电子邮箱、地址和公司等信息。为每个电话号码提供发送短信和拨打电话两个按键实现对应的操作。用户点击手机的“后退”按钮则回到联系人列表界面。<br>\n在联系人详细信息界面点击电话号码对应的发送短信按键则进入发送短信界面。界面包括发送对象信息显示、短信内容输入和发送按键三个功能。用户点击发送按键则发送短信并返回联系人详细信息界面；点击“后退”按钮则回到联系人详细信息界面。<br>\n在联系人详细信息界面内点击电话号码对应的拨打电话按键则进入手机的拨打电话界面。在通话结束或挂断电话后返回联系人详细信息界面。<br>\n在系统分析与设计阶段，公司经过内部讨论，一致认为该系统的需求定义明确，建议基于公司现有的软件开发框架，采用新的基于模型驱动架构的软件开发方法，将开发人员从大量的重复工作和技术细节中解放出来，使之将主要精力集中在具体的功能或者可用性的设计上。公司任命王工为项目技术负责人，负责项目的开发工作。\n<br><br>\n【问题1】（7分）<br>\n请用300字以内的文字，从可移植性、平台互操作性、文档和代码的一致性等三个方面说明基于MDA的软件开发方法的优势。\n<br><br>\n【问题2】（8分）<br>\n王工经过分析，设计出了一个基于MDA的软件开发流程，如图2-1所示。请填写图2-1中（1）~（4）处的空白，完成开发流程。<br>\n<img src=\"https://image-t.chaiding.com/ruankao/6b0ff00ca75519aa68cff92ecc5a11a4.jpg-ruankao\" alt=\"\" width=\"550\" height=\"245\" title=\"\" align=\"\">\n<br><br>\n【问题3】（10分）<br>\n王工经过需求分析，首先建立了该手机通信录管理软件的状态机模型，如图2-2所示。请对题干需求进行仔细分析，填写图2-2中的（1）～（5）处空白。<br>\n<img width=\"493\" height=\"182\" src=\"https://image-t.chaiding.com/ruankao/71eb4a93abac87a893a34c649877d7bb.jpg-ruankao\" alt=\"\">",
        "analyze": "【问题1】<br>\n基于MDA的软件开发方法可以实现多重可移植性。MDA中的平台独立模型（Platform Independent Model,PIM)是跨平台的。同一个PIM可以自动转化成多个不同平台上的平台相关模型（Platform Specific Model，PSM)。因此，在PIM层次的内容都是完全可移植的。<br>\n基于MDA的软件开发方法可以实现跨平台的互操作性能力。从一个PIM生成的多个PSM之间是有联系的，现有的PIM到PSM的转换工具不仅能够生成PSM，还可以生成了PSM之间互相联系的桥接器，这样就可以实现跨平台的互操作性。<br>\n基于MDA的软件开发方法可以保持文档与代码的高度一致性，在MDA的生命周期中，开发者聚焦于PIM，而从PIM到PSM转变过程中，高层次的文档是不会被遗弃的，而且当PSM的任何改变都将反映到PIM中。这样，高层次的文档就和代码就能够保持一致性。<br>\n<br>\n本题考查基于MDA的软件开发过程。<br>\n本题要求考生认真阅读题目对系统需求的描述，采用需求分析与设计的相关方法对系统进行深入理解，并基于MDA方法对系统进行分析与设计。<br>\n基于MDA的软件开发方法的主要过程是抽象出与实现技术无关、完整描述业务功能的核心平台无关模型（Platform Independent Model，PIM),然后针对不同实现技术制定多个转换规则，通过这些转换规则及辅助工具将PIM转换成与具体实现技术相关的平台相关模型（Platform Specific Model，PSM),最后将经过充实的PSM转换成代码。<br>\n基于MDA的软件开发方法可以实现多重可移植性。MDA中的平台独立模型（Platform Independent Model,PIM)是跨平台的。同一个PIM可以自动转化成多个不同平台上的平台相关模型（Platform Specific Model，PSM)。因此，在PIM层次的内容都是完全可移植的。<br>\n基于MDA的软件开发方法可以实现跨平台的互操作能力。从一个PIM生成的多个PSM之间是有联系的，现有的PIM到PSM的转换工具不仅能够生成PSM,还可以生成PSM之间互相联系的桥接器，这样就可以实现跨平台的互操作性。<br>\n基于MDA的软件开发方法可以保持文档与代码的高度一致性，在MDA的生命周期中，开发者聚焦于PIM,而从PIM到PSM转变过程中，高层次的文档是不会被遗弃的，而且当PSM的任何改变都将反映到PIM中。这样，高层次的文档就和代码就能够保持一致性。\n<br><br>\n【问题2】<br>\n(1)平台独立模型（或PIM)<br>\n(2)UML模型<br>\n(3)模型转换<br>\n(4)代码生成<br>\n<br>\n基于MDA的软件开发过程和图2-1的结构，可以看出王工设计的软件开发过程的关键包含平台无关模型（PIM)的构建、平台无关模型与平台相关模型（PSM)之间的转换，以及基于平台相关模型生成对应的代码三个关键步骤。基于上述描述，就可以直接将相应过程填入图中。另外需要注意在建立PIM时，通常采用类图、序列图等UML模型进行模型表达。\n<br><br>\n【问题3】<br>\n(1)点击退出按钮<br>\n(2)联系人详细信息界面<br>\n(3)点击发送按键或后退按钮<br>\n(4)点击电话号码对应的拨打电话按键<br>\n(5)拨打电话界面<br>\n<br>\n根据题干需求描述和王工设计的状态机模型，可以看出：<br>\n进入软件后，在此界面中点击手机的“后退”按钮则退出此Web App,因此(1)处空白应该填写“点击退出按钮”；<br>\n点击联系人列表的任意条目则进入对应的联系人详细信息界面，因此(2)处空白应该填写“联系人详细信息界面”；<br>\n在联系人详细信息界面内点击电话号码对应的发送短信按键则进入发送短信界面，在发送短信界面中点击移动终端的“后退”按钮则回到联系人详细信息界面，因此(3)处空白应该填写“点击退出按钮”；<br>\n在联系人详细信息界面内点击电话号码对应的拨打电话按键则进入手机的拨打电话界面，因此(4)处空白应该填写“点击电话号码对应的拨打电话按键”，(5)处空白应该填写“拨打电话界面”。",
        "multi": 0,
        "questionType": 2,
        "answer": "",
        "chooseItem": null,
        "itemList": null,
        "userAnswer": "",
        "userChooseItem": null,
        "answerCorrect": null,
        "userCollect": 0,
        "notebookNum": 0
      },
      {
        "id": "796235532253286401",
        "title": "试题五（25分）<br>\n阅读以下关于Web应用系统的叙述，在答题纸上回答问题1至问题3。<br>\n【说明】<br>\n某公司因业务需要，拟在短时间内同时完成“小型图书与音像制品借阅系统”和“大学图书馆管理系统”两项基于B/S的Web应用系统研发工作。<br>\n小型图书与音像制品借阅系统向某所学校的所有学生提供图书与音像制品借阅服务。所有学生无需任何费用即可自动成为会员，每人每次最多可借阅5本图书和3个音像制品。图书需在1个月之内归还，音像制品需在1周之内归还。如未能如期归还，则取消其借阅其他图书和音像制品的权限，但无需罚款。学生可通过网络查询图书和音像制品的状态，但不支持预定。<br>\n大学图书馆管理系统向某所大学的师生提供图书借阅服务。有多个图书存储地点，即多个分馆。捜索功能应能查询所有的分馆的信息，但所有的分馆都处于同一个校园内，不支持馆际借阅。本科生和研究生一次可借阅16本书，每本书需在1个月内归还。教师一次可借阅任意数量的书，每本书需在2个月内归还，且支持教师预定图书。如预定图书处于被借出状态，系统自动向借阅者发送邮件提醒。借阅期限到达前3天，向借阅者发送邮件提醒。超出借阅期限1周，借阅者需缴纳罚款2元/天。存在过期未还或罚款待缴纳的借阅者无法再借阅其他图书。图书馆仅向教师和研究生提供杂志借阅服务。<br>\n基于上述需求，该公司召开项目研发讨论会。会议上，李工建议开发借阅系统产品线，基于产品线完成这两个Web应用系统的研发工作。张工同意李工观点，并提出采用 MVP（Model View Presenter）代替MVC的设计模式研发该产品线。\n<br><br>\n【问题1】（6分）<br>\n软件产品线是提升软件复用的重要手段，请用300字以内的文字分别简要描述什么是软件复用和软件产品线。\n<br><br>\n【问题2】（16分）<br>\n产品约束是软件产品线核心资产开发的重要输入，请从以下已给出的（a）～（k）各项内容，分别选出产品的相似点和不同点填入表5-1中（1）～（8）处的空白，完成该软件产品线的产品约束分析。<br>\n（a）项目当前状态；（b）项目操作；（c）预定策略；（d）会员分类；（e）借阅项目数量；（f）项目的类型和属性；（g）检索功能；（h）与支付相关的用户信息；（i）图书 编号；（j）教师；（k）学生<br>\n表5-1产品约束分析<br>\n<img alt=\"\" src=\"https://image-t.chaiding.com/ruankao/f14f128286dd03e3d892de2aff8de1f7.jpg-ruankao\" width=\"589\" height=\"414\">\n<br><br>\n【问题3】（3分）<br>\nMVP模式是由MVC模式派生出的一种设计模式。请说明张工建议借阅系统产品线采用MVP模式代替MVC模式的原因。",
        "analyze": "【问题1】<br>\n软件复用是一种系统化的软件开发过程。它通过开发一组基本的软件构造模块，以覆盖不同需求/体系结构之间的相似性，从而提高系统开发的效率、质量和性能；它通过识别、开发、分类、获取和修改软件实体，以便在不同的软件开发过程中重复地使用它们。<br>\n软件产品线是一组软件系统，共享一组通用的特征集合，通过使用一组预先开发的/通用的核心资产来满足不同产品的研发需求。产品线的三个基本活动包括核心资产开发，核心资产管理，产品开发。<br>\n<br>\n本题考查Web系统分析设计的能力。此类题目要求考生认真阅读题目对现实问题的描述，需要根据需求描述完成系统分析与设计。<br>\n软件复用（Software Reuse)是将己有软件的各种有关知识用于建立新的软件，以缩减软件开发和维护的花费。软件复用是提高软件生产力和质量的一种重要技术。早期的软件复用主要是代码级复用，被复用的知识专指程序，后来扩大到包括领域知识、开发 经验、设计决定、体系结构、需求、设计、代码和文档等一切有关方面。软件复用是一种系统化的软件开发过程，它通过开发一组基本的软件构造模块，以覆盖不同需求/体系结构之间的相似性，从而提高系统开发的效率、质量和性能；它通过识别、开发、分类、获取和修改软件实体，以便在不同的软件开发过程中重复地使用它们。<br>\n软件产品线是一组软件系统，共享一组通用的特征集合，通过使用一组预先开发的和通用的核心资产来满足不同产品的研发需求。产品线的三个基本活动包括核心资产开发、核心资产管理和产品开发。软件产品线的定义和任何产品线的传统定义相一致一一满足特定市场或任务需求的、具有一组公共的、可管理特性的系统集合。但是它增加了一些内容，即在软件产品线中增加了系统开发方式上的一些限制。因为软件产品线的系统需要按照指定方式进行公共资产集的开发，与独立开发、从零开始开发、随机开发等方式相比较，可以获得显著的生产经济效益。正是由此产生的经济效益，才使软件产品线更具吸引力。软件产品线针对特定领域中的一系列具有公共特性的软件系统，试图通过对领域（commonality)共性和可变性（variability)的把握构造一系列领域核心资产，从而使特定的软件产品可以在这些核心资产基础上按照预定义的方式快速、高效地构造出来。软件产品线工程主要包括领域工程、应用系统工程和产品线管理三个方面。其中，领域工程是其中的核心部分，它是领域核心资产（包括领域模型、领域体系结构、领域构件等）的生产阶段；应用系统工程面向特定应用需求，在领域核心资产的基础上面向特定应用需求实现应用系统的定制和开发；而产品线管理则从技术和组织两个方面为软件产品线的建立和长期发展提供管理支持。\n<br><br>\n【问题2】<br>\n(1) (h)<br>\n(2) (a)<br>\n(3) (b)<br>\n(4) (g)<br>\n(5) (f)<br>\n(6) (e)<br>\n(7) (c)<br>\n(8) (d)<br>\n<br>\n产品约束是软件产品线中核心资产开发的主要输入。产品约束分析即分析各个产品有哪些相同点和差异；遵循什么标准；和哪些外部系统有接口；必须满足什么质量属性等。根据需求描述，可具体分析该产品线中的产品约束。\n<br><br>\n【问题3】<br>\n在MVP里，Presenter完全把Model和View进行了分离，主要的程序逻辑在Presenter 里实现。Presenter与具体的View是没有直接关联的，而是通过定义好的接口进行交互， 从而使得在变更View时候可以保持Presenter的不变。借阅系统产品线应用MVP模式可 以使所有的交互都发生在Presenter内部，更好地支持模型与视图完全分离，修改视图而 不影响模型，从而更好地支持产品线中不同产品的实现。<br>\n<br>\nMVP的全称为Model-View-Presenter，Model提供数据，View负责显示，Controller/Presenter负责逻辑的处理。MVP从MVC演变而来，通过表示器将视图与模型巧妙地分开。在该模式中，视图通常由表示器初始化，它呈现用户界面（UI)并接收用户所发出命令，但不对用户的输入作任何逻辑处理，而仅仅是将用户输入转发给表示器。通常每一个视图对应一个表示器，但是也可能一个拥有较复杂业务逻辑的视图会对应多个表示器，每个表示器完成该视图的一部分业务处理工作，降低了单个表示器的复杂程度，一个表示器也能被多个有着相同业务需求的视图复用，增加单个表示器的复用度。表示器包含大多数表示逻辑，用以处理视图，与模型交互以获取或更新数据等。模型描述了系统的处理逻辑，模型对于表示器和视图一无所知。MVP与MVC有着一个重大的区别：在MVP中View并不直接使用Model,它们之间的通信是通过Presenter(MVC中的Controller)来进行的，所有的交互都发生在Presenter内部，而在MVC中View会直接从Model中读取数据而不是通过Controller。",
        "multi": 0,
        "questionType": 2,
        "answer": "",
        "chooseItem": null,
        "itemList": null,
        "userAnswer": "",
        "userChooseItem": null,
        "answerCorrect": null,
        "userCollect": 0,
        "notebookNum": 0
      },
      {
        "id": "796235529996750849",
        "title": "试题四（25分）<br>\n阅读以下关于数据管理的叙述，在答题纸上回答问题1至问题3。<br>\n【说明】<br>\n某软件企业开发了一套新闻社交类软件，提供常见的新闻发布、用户关注、用户推荐、新闻点评、新闻推荐、热点新闻等功能，项目采用MySQL数据库来存储业务数据。系统上线后，随着用户数量的增加，数据库服务器的压力不断加大。为此，该企业设立了专门的工作组来解决此问题。<br>\n张工提出对MySQL数据库进行扩展，采用读写分离，主从复制的策略，好处是程序改动比较小，可以较快完成，后续也可以扩展到MySQL集群，其方案如图4-1所示。李工认为该系统的诸多功能，并不需要采用关系数据库，甚至关系数据库限制了功能的实现，应该采用NoSQL数据库来替代MySQL，重新构造系统的数据层。而刘工认为张工的方案过于保守，对该系统的某些功能，如关注列表、推荐列表、热搜榜单等实现困难，且性能提升不大；而李工的方案又太激进，工作量太大，短期无法完成，应尽量综合二者的优点，采用Key-Value数据库+MySQL数据库的混合方案。<br>\n<img src=\"https://image-t.chaiding.com/ruankao/0f83f9ba49f30d985db223a8d4424bc9.jpg-ruankao\" alt=\"\" width=\"500\" height=\"334\" title=\"\" align=\"\"><br>\n经过组内多次讨论，该企业最终决定采用刘工提出的方案。\n<br><br>\n【问题1】（8分）<br>\n张工方案中采用了读写分离，主从复制策略。其中，读写分离设置物理上不同的主/从服务器，让主服务器负责数据的（a）操作，从服务器负责数据的（b）操作，从而有效减少数据并发操作的（c）,但却帯来了（d）。因此，需要采用主从复制策略保持数据的（e）。<br>\nMySQL数据库中，主从复制是通过binary log来实现主从服务器的数据同步，MySQL数据库支持的三种复制类型分别是（f）、（g）、（h）。<br>\n请将答案填入（a）~（h）处的空白，完成上述描述。\n<br><br>\n【问题2】（8分）<br>\n李工方案中给出了关系数据库与NoSQL数据的比较，如表4-1所示，以此来说明该新闻社交类软件更适合采用NoSQL数据库。请完成表4-1中的（a） ~ （d）处空白。<br>\n表4-1关系数据库与NoSQL数据库特征比较<br>\n<img alt=\"\" src=\"https://image-t.chaiding.com/ruankao/fe8f41ec8f3175554fd4f77398c4e108.jpg-ruankao\" width=\"546\" height=\"156\">\n<br><br>\n【问题3】（9分）<br>\n刘工提出的方案采用了Key-Value数据库+MySQL数据库的混合方案，是根据数据的读写特点将数据分别部署到不同的数据库中。但是由于部分数据可能同时存在于两个数据库中，因此存在数据同步问题。请用200字以内的文字简要说明解决该数据同步问题的三种方法。",
        "analyze": "【问题1】<br>\n(a)写<br>\n(b)读<br>\n(c)锁争用<br>\n(d)数据冗余<br>\n(e)一致性<br>\n(f)基于语句的复制<br>\n(g)基于行的复制<br>\n(h)混合类型复制<br>\n<br>\n本题考查应用系统开发中数据存储管理设计的知识及应用。此类题目要求考生认真阅读题干中应用系统对数据管理的实际需求，采用不同类型的数据管理技术解决实际问题。<br>\n本问题考查MySQL数据库读写分离技术的基本概念，以及由数据分离带来的数据同步问题的主从复制技术的基本概念。<br>\nMySQL数据库读写分离技术主要用于提高数据查询的效率，降低写数据库操作对整体数据库服务器的性能影响。常见做法是在不同的物理机器上设置主从数据库服务器，让主服务器负责数据的写操作，从服务器负责数据的读操作，从而有效减少数据并发操作的读写冲突，从而带来锁争用问题。但采用主从数据库会使得一份数据存放到两个不同的服务器中，会带来数据冗余存放的问题，由此可能会出现数据一致性的问题。因此，在主从服务器之间，需要采用主从复制策略进行数据同步，从而保证数据的一致性。<br>\nMySQL数据库中，主从复制是通过binary log来实现主从服务器的数据同步，MySQL数据库支持的三种复制类型分别是：基于语句的复制，基于主库将SQL语句写入到binary log中完成复制；基于行的复制，基于主库将每一个行记录数据变化的信息作为事件写入到binary log完成复制；混合类型的复制，上述两种复制方式的结合，默认情况下优先使用基于语句的复制，在基于语句复制不安全的情况下会自动切换为基于行的复制。\n<br><br>\n【问题2】<br>\n(a)最终一致性<br>\n(b)非结构化数据<br>\n(c)软状态/柔性事务<br>\n(d)海量数据<br>\n<br>\n本问题考查关系数据库和NoSQL数据库的基本概念。<br>\nNoSQL泛指非关系型的数据库，也被称为Not only SQL,其共同的特点是去掉关系数据库的关系型特性。NoSQL数据库种类繁多，一般分为四类：键值数据库、列数据库、文档型数据库、图数据库。其共同特点是易扩展，大数据量、高性能，灵活的数据模型，高可用。<br>\n与关系数据库相比较，在数据一致性方面，NoSQL不要求实时一致性，只要求满足最终一致性；在数据结构上，关系数据库存储结构化数据，而NoSQL一般存储的是非结构化数据，种类繁多，类型灵活;在事务的支持上，关系数据库强调高事务性,而NoSQL对事务要求要低很多，即支持数据的软状态/柔性事务即可；关系数据库一般为集中式存储，可扩展性差，而NoSQL从出现开始就强调水平可扩展性，支持应用系统的快速扩展；在数据容量上，NoSQL支持海量数据存储管理。\n<br><br>\n【问题3】<br>\n1.实时同步方案，即查询缓存查询不到再从DB查询，保存到缓存；更新缓存时，先更新数据库，再将缓存的设置过期或更新缓存； 2.异步队列的方式同步，可采用消息中间件处理； 3.使用专门的数据同步工具，如canal,通过MySQL的日志进行同步； 4.采用UDF自定义函数的方式，对MySQL的API进行编程，利用触发器进行缓存同步。 本问题考查两种不同数据库之间的数据同步问题。 在混合方案中，数据分别存储在Key-Value数据库和MySQL数据库中。因此需要解决二者之间的数据同步问题。 常见的数据同步方式有： 1.采用自定义函数的方式，在主数据库中进行编程，利用触发器的方式进行数据同步。该方式实现简单，但对主数据库的性能影响大。 2.采用实时同步方式，在数据查询时，首先从缓存中查找，如果查询不到再从MySQL数据库中査询，并将查询结果保存到缓存；更新数据时，首先更新数据库，再将缓存中相应数据设置为过期或失效，或者更新缓存中的相应数据。 3.采用异步队列方式，比如采用消息中间件，可能会存在实时问题。 4.使用专门数据同步工具，比如目前存在的MySQL日志同步工具，如canal等。在应用中，需要根据应用系统数据存储的实际需求进行选择。",
        "multi": 0,
        "questionType": 2,
        "answer": "",
        "chooseItem": null,
        "itemList": null,
        "userAnswer": "",
        "userChooseItem": null,
        "answerCorrect": null,
        "userCollect": 0,
        "notebookNum": 0
      }
    ]
  }
}
